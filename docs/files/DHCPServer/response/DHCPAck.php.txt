<?php
namespace DHCPServer\Response;

use DHCP\Options\DHCPOption53;
use DHCPServer\DHCPConfig;

class DHCPAck extends DHCPResponse {

    public function respond(DHCPConfig $config){
        $requested_ip = $this->packet->getOptions()->getOption(50);
        if($requested_ip){
            $requested_ip = $requested_ip->getIp();
            $this->logger->info("Client requested ip: $requested_ip");
        }
        elseif($this->packet->getCiaddr()){
            $requested_ip = $this->packet->getCiaddr();
            $this->logger->info("Client sent ip: $requested_ip");

        }
        $selected_ip = $this->findIpForClient($this->packet->getChaddr(), $config, $requested_ip);

        if($requested_ip && $requested_ip != $selected_ip['ip']){
            $response = $this->createResponse(DHCPOption53::MSG_DHCPNAK);
            $response->setFlags(1); //broadcast
            $this->logger->info("Sending Nak for request", array(
                'mac' => $this->packet->getChaddr()
            ));

            return $response;
        }

        $response = $this->createResponse(DHCPOption53::MSG_DHCPACK);
        $response->setYiaddr($selected_ip['ip']);
        $response->setOption(51, $selected_ip['lease_time']);
        $response->setOption(1, $selected_ip['mask']);
        $response->setOption(3, $selected_ip['router']);
        $response->setOption(54, $selected_ip['dhcp']);
        $response->setOption(6, $selected_ip['dns']);
        $response->setOption(28, $selected_ip['broadcast']);
        $response->setOption(255, false);

//                $response->setOption(15, );
//                $response->setOption(12, );

        $this->logger->info("Sending ack", array(
            'mac' => $this->packet->getChaddr(),
            'ip' => $response->getYiaddr()
        ));

        $this->lockIp($selected_ip, $this->packet->getChaddr(), get_class());

        return $response;
    }
}
